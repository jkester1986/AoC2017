var expect = require('chai').expect;
var bm = require('./index');

describe('#Binary Machine', function() {

  it('Should return an error message if a non-number is passed', function() {
    expect(bm('zero')).to.equal('You should pass a number equals or greater than 0');
  });

  it('Should return an error message if a number less than 0 is passed', function() {
    expect(bm(-1)).to.equal('You should pass a number equals or greater than 0');
  });

  it('Should return the binary representantion for the decimal number 0', function() {
    expect(bm(0)).to.equal('0');
  });

  it('Should return the binary representantion for the decimal number 1', function() {
    expect(bm(1)).to.equal('1');
  });

  it('Should return the binary representantion for the decimal number 2', function() {
    expect(bm(2)).to.equal('10');
  });

  it('Should return the binary representantion for the decimal number 3', function() {
    expect(bm(3)).to.equal('11');
  });

  it('Should return the binary representantion for the decimal number 4', function() {
    expect(bm(4)).to.equal('100');
  });

  it('Should return the binary representantion for the decimal number 5', function() {
    expect(bm(5)).to.equal('101');
  });

  it('Should return the binary representantion for the decimal number 6', function() {
    expect(bm(6)).to.equal('110');
  });

  it('Should return the binary representantion for the decimal number 7', function() {
    expect(bm(7)).to.equal('111');
  });

  it('Should return the binary representantion for the decimal number 8', function() {
    expect(bm(8)).to.equal('1000');
  });

  it('Should return the binary representantion for the decimal number 9', function() {
    expect(bm(9)).to.equal('1001');
  });

  it('Should return the binary representantion for the decimal number 10', function() {
    expect(bm(10)).to.equal('1010');
  });

  it('Should return the binary representantion for the decimal number 11', function() {
    expect(bm(11)).to.equal('1011');
  });

  it('Should return the binary representantion for the decimal number 12', function() {
    expect(bm(12)).to.equal('1100');
  });

  it('Should return the binary representantion for the decimal number 13', function() {
    expect(bm(13)).to.equal('1101');
  });

  it('Should return the binary representantion for the decimal number 25', function() {
    expect(bm(25)).to.equal('11001');
  });

  it('Should return the binary representantion for the decimal number 31', function() {
    expect(bm("31")).to.equal('11111');
  });

  it('Should return the binary representantion for the decimal number 50', function() {
    expect(bm(50)).to.equal('110010');
  });

  it('Should return the binary representantion for the decimal number 100', function() {
    expect(bm(100)).to.equal('1100100');
  });

  it('Should return the binary representantion for the decimal number 1000', function() {
    expect(bm(1000)).to.equal('1111101000');
  });
});
